server {
    listen 80;
    listen 443 ssl http2;
    server_name .public.monster.local;
    root "/home/vagrant/monster/www/public-server/public";

    index index.html index.htm index.php;

    charset utf-8;

    set_by_lua_block $domain {
        local f = assert(io.open(ngx.var.document_root .. "/../.env", "rb"))
        local content = f:read("*a")
        f:close()
        local pattern = "FORCE_DOMAIN=(.-)\r?\n"
        local domain = string.match(content, pattern)
        if (domain == nil or domain == "") then
            return ngx.var.http_host
        else
            return domain
        end
    }

    location ~ ^/client/assets/(?<apath>.*)$ {
        try_files /assets/$domain/web/overrides/$apath $uri =404;
    }

    location = /robots.txt {
        try_files /assets/$domain/web/overrides/robots.txt $uri =404 break;
        access_log off;
        log_not_found off;
    }

    location ~ ^/assets {
        rewrite ^/assets/(.*) /assets/$domain/web/custom/$1 break;
    }

    location @empty_json {
        return 200 "{}";
    }

    location ~ ^/merge/(.*) {
        try_files /assets/$domain/web/merge/$1 $uri =200 @empty_json;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;

    }

    location = /favicon.ico { access_log off; log_not_found off; }

    access_log off;
    error_log  /var/log/nginx/public.monster.local-error.log error;

    sendfile off;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;


        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    location ~ /\.ht {
        deny all;
    }

    ssl_certificate     /etc/ssl/certs/public.monster.local.crt;
    ssl_certificate_key /etc/ssl/certs/public.monster.local.key;
}